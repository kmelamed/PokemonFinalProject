// This kind of works

import java.util.Scanner;

public class Battle {
	
	public static void battleWild(Player p, Pokemon wPokemon) {
		Scanner inputBW = new Scanner(System.in);
		
		int pChoice = pokemonChoice(p);
		Pokemon pPokemon = p.pokemon.get(pChoice - 1);
		
		while (p.pokemon.size() > 0 && wPokemon.isAlive()) {
			System.out.println("\n" + pPokemon);
			System.out.println(wPokemon);
			
			System.out.println("\n1. Attack");
			System.out.println("2. Potion");
			
			int userChoice = inputBW.nextInt();
			if (userChoice == 2 && p.numPotions == 0)
				userChoice = 1;
			if (userChoice == 1) {
				System.out.println("1. fast attack");
				System.out.println("2. heavy attack");
				int moveChoice = inputBW.nextInt();
				
				if (moveChoice == 1) {
					int enemyMove = (int)(Math.random() * 2 + 1);
					if (moveChoice == enemyMove) {
						if (pPokemon.speed >= wPokemon.speed) {
							pPokemon.fast(wPokemon);
							wPokemon.fast(pPokemon);
							if (pPokemon.currentHP <= 0) {
								p.graveyard.add(p.pokemon.remove(pChoice - 1));
							}
						}
						else {
							wPokemon.fast(pPokemon);
							pPokemon.fast(wPokemon);
						}
					}
					else {
						pPokemon.fast(wPokemon);
						wPokemon.heavy(pPokemon);
					}
				}
				else {
					int enemyMove = (int)(Math.random() * 2 + 1);
					if (moveChoice == enemyMove) {
						if (pPokemon.speed >= wPokemon.speed) {
							pPokemon.heavy(wPokemon);
							wPokemon.heavy(pPokemon);
						}
						else {
							wPokemon.heavy(pPokemon);
							pPokemon.heavy(wPokemon);
						}
					}
					else {
						wPokemon.fast(pPokemon);
						pPokemon.heavy(wPokemon);
					}
				}
			}
			else if (userChoice == 2) {
				System.out.println("You used one potion, you have " + (p.numPotions - 1) + " left");
				p.numPotions--;
				if (pPokemon.currentHP + 50 > pPokemon.totalHP) {
					pPokemon.currentHP = pPokemon.totalHP;
				} else {
					pPokemon.currentHP += 50;
				}
			}
		}
		
		inputBW.close();
		if (wPokemon.currentHP <= 0) {
			System.out.println("You defeated the wild " + wPokemon.name + "!");
			// Need to go back to the board
		} else {
			System.out.println("You lost :(");
			// Option to start over or stop playing
		}
	}
	
	public static void battleTrainer(Player p, Trainer t) {
		Scanner inputBT = new Scanner(System.in);
		
		System.out.println("Choose your pokemon: ");
		for (int i = 1; i <= p.pokemon.size(); i++) {
			System.out.println(i + ". " + p.pokemon.get(i - 1).toStringAbrev());
		}
		int pokemonChoice = inputBT.nextInt();
		Pokemon pPokemon = p.pokemon.get(pokemonChoice);
		Pokemon tPokemon = t.pokemon.get(0);
		
		while (p.pokemon.size() > 0 && t.pokemon.size() > 0) {
			System.out.println(pPokemon);
			System.out.println(tPokemon);
			
			System.out.println("1. Attack");
			System.out.println("2. Potion");
			
			int userChoice = inputBT.nextInt();
			if (userChoice == 1) {
				System.out.println("1. fast attack");
				System.out.println("2. heavy attack");
				int moveChoice = inputBT.nextInt();
				
				if (moveChoice == 1) {
					int enemyMove = (int)(Math.random() * 2 + 1);
					if (moveChoice == enemyMove) {
						if (pPokemon.speed >= tPokemon.speed) {
							pPokemon.fast(tPokemon);
							tPokemon.fast(tPokemon);
						}
						else {
							tPokemon.fast(tPokemon);
							pPokemon.fast(tPokemon);
						}
					}
					else {
						pPokemon.fast(tPokemon);
						tPokemon.heavy(tPokemon);
					}
				}
				else {
					int enemyMove = (int)(Math.random() * 2 + 1);
					if (moveChoice == enemyMove) {
						if (pPokemon.speed >= tPokemon.speed) {
							pPokemon.heavy(tPokemon);
							tPokemon.heavy(tPokemon);
						}
						else {
							tPokemon.heavy(tPokemon);
							pPokemon.heavy(tPokemon);
						}
					}
					else {
						tPokemon.fast(tPokemon);
						pPokemon.heavy(tPokemon);
					}
				}
			}
			else if (userChoice == 2) {
				System.out.println("You used one potion, you have " + (p.numPotions - 1) + " left");
				p.numPotions--;
				if (pPokemon.currentHP + 50 > pPokemon.totalHP) {
					pPokemon.currentHP = pPokemon.totalHP;
				} else {
					pPokemon.currentHP += 50;
				}
				
				int enemyMove = (int)(Math.random() * 2 + 1);
				if (enemyMove == 1) {
					tPokemon.fast(pPokemon);
				} else {
					tPokemon.heavy(pPokemon);
				}
			}
		}
		
		inputBT.close();
		if (t.pokemon.size() == 0) {
			System.out.println("You defeated the trainer!");
			// Need to go back to the board
		} else {
			System.out.println("You lost :(");
			// Option to start over or stop playing
		}
	}
	
	public static int pokemonChoice(Player p) {
		Scanner inputPC = new Scanner(System.in);
		System.out.println("Choose your pokemon: ");
		for (int i = 1; i <= p.pokemon.size(); i++) {
			System.out.println(i + ". " + p.pokemon.get(i - 1).toStringAbrev());
		}
		int x = inputPC.nextInt();
		inputPC.close();
		return x;
	}
	
	public static void win() {
		
	}
	
	public static void lose() {
		
	}
}
